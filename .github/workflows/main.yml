name: CI/CD com SonarCloud

on:
  push:
    branches:
      - master

jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    outputs:
      sonar_quality_gate_passed: ${{ steps.quality-gate.outputs.quality_gate_passed }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar o Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Rodar testes com cobertura
        run: mvn clean verify

      - name: Análise no SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.coverage.exclusions=**/config/**,**/model/**,**/dto/**,**/exception/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checar Quality Gate
        id: quality-gate
        uses: sonarsource/sonarcloud-quality-gate-action@v1.1.0
        with:
          scanTimeout: 300
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-if-quality-ok:
    name: Deploy para Heroku (se qualidade ok)
    needs: build-and-analyze
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-analyze.outputs.sonar_quality_gate_passed == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Instalar Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          export PATH="$PATH:/usr/local/bin"

      - name: Deploy para o Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
